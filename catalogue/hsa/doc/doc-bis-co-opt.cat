"patched first reading of the HSA documentation, SC partial orders version, restricted scopes for SC, "

(* This is the model described in the document, restricted scope instance
   version, pratial orders for SC *)

include "hsa-lib.cat"

(*************)
(* Coherence *)
(*************)

let makeCoL(s) = linearisations(s,co0)
with co from cross (map makeCoL (partition W))

let fr = rf^-1 ; co
let coh = (fr|rf|co)+


// useless (included in HhbCohCons)
// call consistent(coh,po) as CohCons

empty rmw & (fr;co) as RmwCons

(*****************************)
(* No values out of thin air *)
(*****************************)

(* gdo aka no value out of thin-air *)
let ldo = addr | data | ctrl
let gdo = rfe | ldo
//let gdo = coh | ldo

acyclic gdo as GdoCons

(*******************************)
(* Heterogenous happens before *)
(*******************************)

let acq-rel =
  ((W & Release) * (R & Acquire)) & coh
| ((F & Release) * Acquire) &
  ((po & (_ * W)); coh; (po? & (R * _)))
| (Release * (F & Acquire)) &
  ((po? & (_ * W)); coh; (po & (R * _)))

let sso s = same-instance(s) & acq-rel

let hhb = (po | union-scopes sso)+

irreflexive hhb as HhbCons
call consistent (hhb,coh) as HhbCohCons

(* SC orders operate on synchronizing operations in scope instances *)
let sync-instances(lvl) =
  (Synchronizing * Synchronizing) & same-instance(lvl)

(* For any scope instance S, X -po-> Y = X -SC_S-> Y *)
let preSC = (hhb | coh)

(* All combinations of all orders for a given scope level *)
let makeSCscope(lvl) =  preSC & sync-instances(lvl)

(* Generate and check for all scope levels, unrolled  *)
let SWI = makeSCscope('wi)
acyclic SWI as ScCons
let SWAVE = makeSCscope('wave)
acyclic SWAVE as ScCons
let SWG = makeSCscope('wg)
acyclic SWG as ScCons
let SAGENT = makeSCscope('agent)
acyclic SAGENT as ScCons
let SSYSTEM = makeSCscope('system)
acyclic SSYSTEM as ScCons

(* Check consistency of SC orders (useless ??) *)

call compatible(SWI,SWAVE) as ScSc
call compatible(SWI,SWG) as ScSc
call compatible(SWI,SAGENT) as ScSc
call compatible(SWI,SSYSTEM) as ScSc
call compatible(SWAVE,SWG) as ScSc
call compatible(SWAVE,SAGENT) as ScSc
call compatible(SWAVE,SSYSTEM) as ScSc
call compatible(SWG,SAGENT) as ScSc
call compatible(SWG,SSYSTEM) as ScSc
call compatible(SAGENT,SSYSTEM) as ScSc

include "hsa-race.cat"
