AArch64 L070
{
int64_t t[2];
int64_t f;
0:X0=t; 0:X2=f;
1:X0=t; 1:X2=f;
int64_t 1:X1;
int64_t 1:X5;
int64_t 1:X7;
}
  P0             | P1              ;
  MOV X1,#1      | LDR X1,[X2]     ;
  MOV X3,#3      | AND X3,X1,#2    ;
  STP X1,X3,[X0] | ADD X4,X0,X3    ;
  DMB ST         | LDNP X5,X7,[X4] ;
  MOV X5,#1      |                 ;
  STR X5,[X2]    |                 ;
exists 1:X1=1 /\ (1:X5=0 \/ 1:X7=0)
(* The test is allowed because of non-temporal LDNP:
 *
 * See Arm Architecture Reference Manual, section C.3.2.9 "Load/store
 * scalar SIMD and floating-point":
 *
 * In addition, there is an exception to the usual memory ordering
 * rules. If an address dependency exists between two memory reads, and
 * a load non-temporal pair instruction generated the second read, then
 * in the absence of any other barrier mechanism to achieve order,
 * those memory accesses can be observed in any order by the other
 * observers within the shareability domain of the memory addresses
 * being accessed.
 *)